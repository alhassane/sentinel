version: "3.2"

services:
  consul-bootstrap:
    image: consul
    command: agent -server -bootstrap-expect 1 -domain vagrant.dev -node=node1 -datacenter cluster --client=0.0.0.0 -recursor 8.8.8.8 -ui
    ports:
      - target: 8500
        published: 8500
        protocol: tcp
        mode: host
    networks:
      - consul
    volumes:
      - consul-data:/consul/data
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    deploy:
      labels:
        not_register: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == node1

  consul-slave1:
    image: consul
    command: agent -server -join consul-bootstrap -domain vagrant.dev -node=node2 -datacenter cluster --client=0.0.0.0 -recursor 8.8.8.8 -ui
    ports:
      - target: 8500
        published: 8500
        protocol: tcp
        mode: host
    networks:
      - consul
    volumes:
      - consul-data:/consul/data
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    deploy:
      labels:
        not_register: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == node2

  consul-slave2:
    image: consul
    command: agent -server -join consul-bootstrap -domain vagrant.dev -node=node3 -datacenter cluster --client=0.0.0.0 -recursor 8.8.8.8 -ui
    ports:
      - target: 8500
        published: 8500
        protocol: tcp
        mode: host
    networks:
      - consul
    volumes:
      - consul-data:/consul/data
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    deploy:
      labels:
        not_register: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == node3

  consul-slave3:
    image: consul
    command: agent -join consul-bootstrap -domain vagrant.dev -node=node4 -datacenter cluster --client=0.0.0.0 -recursor 8.8.8.8 -ui
    ports:
      - target: 8500
        published: 8500
        protocol: tcp
        mode: host
    networks:
      - consul
    volumes:
      - consul-data:/consul/data
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    deploy:
      labels:
        not_register: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == node4

  sentinel-swarmmanager1:
    image: sentinel:dev
    networks:
      - consul
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CONSUL_ADDRESS=http://consul-bootstrap:8500
      - DEBUG=1
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == node1

  sentinel-swarmmanager2:
    image: sentinel:dev
    networks:
      - consul
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CONSUL_ADDRESS=http://consul-slave1:8500
      - DEBUG=1
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == node2

  sentinel-swarmmanager3:
    image: sentinel:dev
    networks:
      - consul
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CONSUL_ADDRESS=http://consul-slave2:8500
      - DEBUG=1
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == node3

  sentinel-worker1:
    image: sentinel:dev
    networks:
      - consul
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CONSUL_ADDRESS=http://consul-slave3:8500
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == node4


volumes:
  consul-data:
    driver: local

networks:
  consul:
    driver: overlay
